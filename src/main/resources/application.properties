
#Data source

#Indica el driver/lib para conectar java a mysql
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#Url donde esta el servicio de tu mysql y el nombre de la base de datos
spring.datasource.url=jdbc:mysql://localhost:3306/mydatabase

#Usuario y contrasena para tu base de datos descrita en la línea anterior
spring.datasource.username=root
spring.datasource.password=root

#[opcional]Imprime en tu consola las instrucciones hechas en tu base de datos.
spring.jpa.show-sql = true

Create database pokemon;

Use pokemon;


CREATE TABLE IF NOT EXISTS `mydb`.`datosPokemon` (
`datosId` INT NOT NULL,
`nombre` VARCHAR(50) NULL,
`altura` DOUBLE NULL,
`peso` DOUBLE NULL,
`descripcion` INT NULL,
`cargaAtaque` INT NULL,
`tipoId` INT NULL,
`prioridad` INT NULL,
`evolucion` TINYINT NULL,
PRIMARY KEY (`datosId`))
ENGINE = InnoDB


CREATE TABLE IF NOT EXISTS `mydb`.`estadisticasPokemon` (
`pokemonId` INT NOT NULL,
`puntosVida` INT NULL,
`ataque` INT NULL,
`defensa` INT NULL,
`especial` INT NULL,
`velocidad` INT NULL,
PRIMARY KEY (`pokemonId`),
CONSTRAINT `idDatos`
FOREIGN KEY ()
REFERENCES `mydb`.`datosPokemon` ()
ON DELETE NO ACTION
ON UPDATE NO ACTION)
ENGINE = InnoDB

CREATE TABLE IF NOT EXISTS `mydb`.`evolucion` (
`idPokemon` INT NOT NULL,
PRIMARY KEY (`idPokemon`),
CONSTRAINT `idDatos`
FOREIGN KEY ()
REFERENCES `mydb`.`datosPokemon` ()
ON DELETE NO ACTION
ON UPDATE NO ACTION)
ENGINE = InnoDB

CREATE TABLE IF NOT EXISTS `mydb`.`movimientosPokemon` (
`movimietosId` INT NOT NULL,
`nombre` VARCHAR(45) NULL,
`potencia` INT NULL,
`precision` INT NULL,
`descripcion` INT NULL,
`prioridad` INT NULL,
`cargaAtaque` INT NULL,
PRIMARY KEY (`movimietosId`),
CONSTRAINT `idTipo`
FOREIGN KEY ()
REFERENCES `mydb`.`tipo` ()
ON DELETE NO ACTION
ON UPDATE NO ACTION)
ENGINE = InnoDB

CREATE TABLE IF NOT EXISTS `mydb`.`tipo` (
`idTipo` INT NOT NULL,
`nombre` INT NULL,
PRIMARY KEY (`idTipo`))
ENGINE = InnoDB

CREATE TABLE IF NOT EXISTS `mydb`.`tipoPokemon` (
`idPokemon` INT NOT NULL,
`idTipo` INT NOT NULL,
PRIMARY KEY (`idPokemon`, `idTipo`),
CONSTRAINT `idTipo`
FOREIGN KEY ()
REFERENCES `mydb`.`tipo` ()
ON DELETE NO ACTION
ON UPDATE NO ACTION,
CONSTRAINT `idDatos`
FOREIGN KEY ()
REFERENCES `mydb`.`datosPokemon` ()
ON DELETE NO ACTION
ON UPDATE NO ACTION)
ENGINE = InnoDB

